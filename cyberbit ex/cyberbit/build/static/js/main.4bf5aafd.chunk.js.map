{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleProtocolChange","e","_ref","value","setState","protocol","handleTimeChange","_ref2","time","clearAll","checked","expanded","keyword","onSearchInputChange","event","data","searchedNodes","prevState","trim","getAllValuesFromNodes","getHighlightText","text","startIndex","indexOf","react_default","a","createElement","substring","style","color","length","keywordFilter","nodes","newNodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","n","children","nextNodes","label","toLowerCase","includes","push","err","return","sumvalues","addedValue","filter","element","firstLevel","values","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","apply","toConsumableArray","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","learningAlert","url","concat","state","alert","renderDeviceTreeElements","_","cloneDeep","nodesData","className","Input","marginBottom","fluid","icon","placeholder","iconPosition","onChange","index_browser_default","onCheck","console","log","onExpand","expandOnClick","onClick","showNodeIcon","renderSummary","Segment","Group","raised","join","Divider","horizontal","Button","renderAddedData","Form","Field","Radio","name","nextProps","nextState","isEqual","Grid","columns","divided","inverted","padded","Row","Column","Component","Boolean","window","location","hostname","match","extradata","addedData","id","React","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bf5aafd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Input, Grid, Segment, Radio,Form,Divider, Button } from \"semantic-ui-react\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport './App.css';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n\nimport _ from \"lodash\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: [],\n      expanded: [],\n      keyword: \"\",\n      protocol:\"\",\n      time:\"\"\n    };\n  }\n  handleProtocolChange = (e, {value}) =>this.setState({protocol: value })\n  handleTimeChange =  (e, {value}) =>this.setState({time: value })\n  clearAll =  () =>this.setState({\n     checked: [],\n    expanded: [],\n    keyword: \"\",\n    protocol:\"\",\n    time:\"\" })\n\n  onSearchInputChange = (event, data, searchedNodes) => {\n    this.setState(prevState => {\n      if (prevState.keyword.trim() && !data.value.trim()) {\n        return {\n          expanded: [],\n          keyword: data.value\n        };\n      }\n      return {\n        expanded: this.getAllValuesFromNodes(searchedNodes, true),\n        keyword: data.value\n      };\n    });\n  };\n\n  getHighlightText = (text, keyword) => {\n    const startIndex = text.indexOf(keyword);\n    return startIndex !== -1 ? (\n      <span>\n        {text.substring(0, startIndex)}\n        <span style={{ color: \"#2cb664\" }}>\n          {text.substring(startIndex, startIndex + keyword.length)}\n        </span>\n        {text.substring(startIndex + keyword.length)}\n      </span>\n    ) : (\n        <span>{text}</span>\n      );\n  };\n\n  keywordFilter = (nodes, keyword) => {\n    let newNodes = [];\n    for (let n of nodes) {\n      if (n.children) {\n        const nextNodes = this.keywordFilter(n.children, keyword);\n        if (nextNodes.length > 0) {\n          n.children = nextNodes;\n        } else if (n.label.toLowerCase().includes(keyword.toLowerCase())) {\n          n.children = nextNodes.length > 0 ? nextNodes : [];\n        }\n        if (\n          nextNodes.length > 0 ||\n          n.label.toLowerCase().includes(keyword.toLowerCase())\n        ) {\n          n.label = this.getHighlightText(n.label, keyword);\n          newNodes.push(n);\n        }\n      } else {\n        if (n.label.toLowerCase().includes(keyword.toLowerCase())) {\n          n.label = this.getHighlightText(n.label, keyword);\n          newNodes.push(n);\n        }\n      }\n    }\n    return newNodes;\n  };\n\n  sumvalues = (nodes,addedValue) => {\n    let requestedArray = nodes.filter(element => element.value === addedValue);\n    return requestedArray.checked;\n  }\n\n  getAllValuesFromNodes = (nodes, firstLevel) => {\n    if (firstLevel) {\n      const values = [];\n      for (let n of nodes) {\n        values.push(n.value);\n        if (n.children) {\n          values.push(...this.getAllValuesFromNodes(n.children, false));\n        }\n      }\n      return values;\n    } else {\n      const values = [];\n      for (let n of nodes) {\n        values.push(n.value);\n        if (n.children) {\n          values.push(...this.getAllValuesFromNodes(n.children, false));\n        }\n      }\n      return values;\n    }\n  };\n\n  learningAlert= () =>{\n    let url = `https://api.spotify.com/v1/search?devices=${this.state.checked}&protocols=${this.state.protocol}&time=${this.state.time}`;\n    alert(url);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.keyword !== nextState.keyword) {\n      return true;\n    }\n    if (!_.isEqual(this.state.checked, nextState.checked)) {\n      return true;\n    }\n    if (_.isEqual(this.state.expanded, nextState.expanded)) {\n      return false;\n    }\n    return true;\n  }\n\n  renderDeviceTreeElements = () =>{\n    let searchedNodes = this.state.keyword.trim()\n      ? this.keywordFilter(_.cloneDeep(this.props.nodesData), this.state.keyword)\n      : this.props.nodesData;\n\n    return(\n      <label className=\"col-md-7 text-left\">\n      <h1 className=\"rct-icon-half-check2\">Select devices</h1>\n        <Input\n          style={{ marginBottom: \"20px\" }}\n          fluid\n          icon=\"search\"\n          placeholder=\"search from devices\"\n          iconPosition=\"left\"\n          onChange={(event, data) => {\n            this.onSearchInputChange(event, data, searchedNodes);\n          }}\n        />\n      \n        <CheckboxTree \n          nodes={searchedNodes}\n          checked={this.state.checked}\n          expanded={this.state.expanded}\n          onCheck={checked => {\n            console.log(\"checked\", checked);\n            this.setState({ checked }, () => {\n              console.log(\"this.state\", this.state);\n            });\n          }}\n          onExpand={expanded => this.setState({ expanded })}\n          expandOnClick\n          onClick={() => {\n            console.log(\"on click\");\n          }}\n          showNodeIcon={false}\n        />\n    </label>\n    )\n\n  }\n\n  renderSummary = () =>{\n    return(\n      <Segment.Group raised color=\"black\">\n      <h1 className=\"rct-icon-half-check2\">Summary</h1>\n    <Segment className=\"rct-icon-half-check2\" color=\"black\">Checked Devices: {this.state.checked.join('             ,               ')}</Segment>\n    <Divider horizontal></Divider>\n    <Segment>Select Time:  {this.state.time}</Segment>\n    <Divider horizontal></Divider>\n    <Segment>Select protocol:  { this.state.protocol}</Segment>\n    <Divider horizontal></Divider>\n    <Segment><Button onClick={this.clearAll} >clear all</Button> <Button onClick={this.learningAlert} >start learining</Button></Segment>\n  </Segment.Group>\n\n    )\n\n  }\n\n  renderAddedData = (value) =>{\n    if(value === 'protocol'){\n      return (\n       \n           <label className=\"col-md-7 text-left\">\n        <Form className=\"left\">\n          <Form.Field>\n          \n      <h1 className=\"rct-icon-half-check2\">Selected protocol: <b>{this.state.protocol}</b></h1>\n          </Form.Field>\n          <Form.Field>\n            <Radio\n              label='Modbus'\n              name='radioGroup'\n              value='Modbus'\n              checked={this.state.protocol === \"Modbus\"}\n              onChange={this.handleProtocolChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Radio\n              label='DNP-3'\n              name='radioGroup'\n              value='DNP-3'\n              checked={this.state.protocol === \"DNP-3\"}\n              onChange={this.handleProtocolChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Radio\n              label='IEC104'\n              name='radioGroup'\n              value='IEC104'\n              checked={this.state.protocol === \"IEC104\"}\n              onChange={this.handleProtocolChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Radio\n              label='MMS'\n              name='radioGroup'\n              value='MMS'\n              checked={this.state.protocol === \"MMS\"}\n              onChange={this.handleProtocolChange}\n            />\n          </Form.Field>\n          \n        </Form>\n              </label>\n      )\n    }\n    return (\n      <Form>\n      <Form.Field>\n      <h1 className=\"rct-icon-half-check2\">Selected Time: <b>{this.state.time}</b></h1>\n      </Form.Field>\n      <Form.Field>\n        <Radio\n          label='Last 30 minutes'\n          name='radioGroup'\n          value='Last 30 minutes'\n          checked={this.state.time === \"Last 30 minutes\"}\n          onChange={this.handleTimeChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Radio\n          label='Last Hour'\n          name='radioGroup'\n          value='Last Hour'\n          checked={this.state.time === \"Last Hour\"}\n          onChange={this.handleTimeChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Radio\n          label='Last 8 Hours'\n          name='radioGroup'\n          value='Last 8 Hours'\n          checked={this.state.time === \"Last 8 Hours\"}\n          onChange={this.handleTimeChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Radio\n          label='Last 24 Hours'\n          name='radioGroup'\n          value='Last 24 Hours'\n          checked={this.state.time === \"Last 24 Hours\"}\n          onChange={this.handleTimeChange}\n        />\n      </Form.Field>\n      \n    </Form>\n\n    )\n\n  }\n\n  render() {\n   \n      \n    return (\n      <div>\n      <i className=\"fas fa-archway\"></i>\n    <Grid columns='equal' divided inverted padded>\n    <Grid.Row color='black'>\n      <Grid.Column>\n        <Segment color='black' inverted >\n        {this.renderDeviceTreeElements()}\n        </Segment>\n      </Grid.Column>\n      <Grid.Column color='orange' >\n        <Segment color='orange' inverted>\n        {this.renderAddedData('protocol')}\n        </Segment>\n        </Grid.Column>\n        <Grid.Column color='olive' >\n        <Segment color='olive' inverted>\n        {this.renderAddedData(null)}\n        </Segment>\n        </Grid.Column>\n        <Grid.Column color='black' >\n        <Segment color='black' inverted>\n        {this.renderSummary()}\n        </Segment>\n        </Grid.Column>\n\n     \n    </Grid.Row>\n  </Grid>\n      \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n\nconst nodesData = [\n  {\n    value: \"device_group-1\",\n    label: \"device_group-1\",\n    children: [\n       {\n        value: \"device-11\",\n        label: \"device-11\"\n      },\n       {\n        value: \"device-12\",\n        label: \"device-12\"\n      },\n       {\n        value: \"device-13\",\n        label: \"device-13\"\n      },\n       {\n        value: \"device 14\",\n        label: \"device-14\"\n      },\n       {\n        value: \"device-15\",\n        label: \"device-15\"\n      },\n       {\n        value: \"device-16\",\n        label: \"device-16\"\n      },\n      {\n        value: \"device-17\",\n        label: \"device-17\"\n      }\n    ]\n  },\n  {\n    value: \"device_group-2\",\n    label: \"device_group-2\",\n     children: [\n       {\n        value: \"device-21\",\n        label: \"device-21\"\n      },\n       {\n        value: \"device-22\",\n        label: \"device-22\"\n      },\n       {\n        value: \"device-23\",\n        label: \"device-23\"\n      },\n       {\n        value: \"device 24\",\n        label: \"device-24\"\n      },\n       {\n        value: \"device-25\",\n        label: \"device-25\"\n      },\n       {\n        value: \"device-26\",\n        label: \"device-26\"\n      },\n      {\n        value: \"device-27\",\n        label: \"device-27\"\n      }\n    ]\n  },\n  {\n    value: \"device_group-3\",\n    label: \"device_group-3\",\n     children: [\n       {\n        value: \"device-31\",\n        label: \"device-31\"\n      },\n       {\n        value: \"device-32\",\n        label: \"device-32\"\n      },\n       {\n        value: \"device-33\",\n        label: \"device-33\"\n      },\n       {\n        value: \"device 34\",\n        label: \"device-34\"\n      },\n       {\n        value: \"device-35\",\n        label: \"device-35\"\n      },\n       {\n        value: \"device-36\",\n        label: \"device-36\"\n      },\n      {\n        value: \"device-37\",\n        label: \"device-37\"\n      }\n    ]\n  }]\n\n  class addedData extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n        protocol: [ {\n        \"id\": 1,\n        \"name\": \"Modbus\"\n    },{\n        \"id\": 2,\n        \"name\": \"DNP 3\"\n    },{\n        \"id\": 3,\n        \"name\": \"IEC104\"\n    },{\n        \"id\": 4,\n        \"name\": \"MMS\"\n    }\n    ],\n\n    \"time\": [ {\n        \"id\": 1,\n        \"name\": \"Last 30 minutes\"\n    },{\n        \"id\": 2,\n        \"name\": \"Last Hour\"\n    },{\n        \"id\": 3,\n        \"name\": \"Last 8 hours\"\n    },{\n        \"id\": 4,\n        \"name\": \"Last 24 Hours\"\n    }\n    ]\n    }\n  }\n  handleProtocolChange = (value) =>this.setState({protocol: value })\n  handleTimeChange =  (value) =>this.setState({time: value })\n  \n}\nlet extradata = new addedData();\n      \nReactDOM.render(<App nodesData={nodesData} addedData={extradata} />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}